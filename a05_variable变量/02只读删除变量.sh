#!/bin/bash
#======================================
# File name:shell_03只读变量.sh
# Author:liangliangSu
# Email:sll917@hotmail.com
# Date of writing:2022-10-06 09:30
#======================================
#只读变量
#使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。
#下面的例子尝试更改只读变量，结果报错：
myUrl="http://see.xidian.edu.cn/cpp/shell/"
readonly myUrl
myUrl="http://see.xidian.edu.cn/cpp/danpianji/"
echo "(1)------------------------------------------------------------"

#删除变量
#使用 unset 命令可以删除变量。语法：
#unset variable_name
#变量被删除后不能再次使用；unset 命令不能删除只读变量。
#举个例子：
myUrl="http://see.xidian.edu.cn/cpp/u/xitong/"
unset myUrl
echo $myUrl
echo "(2)------------------------------------------------------------"

#删除变量的演示场景
#某变量取值为小数, 又希望和整数作比对, 但是小数是没有办法
#作比对的! 例如3.5和53怎么比对呢? 只能将小数位去掉, 形成 3和53对了!
#制除变量说明
: '
变量			说明
$(变量#匹配规则)	从头开始匹配, 最短删除
$(变量##匹配规则)	从头开始匹配, 最长删除
$(使变量%匹配规则)	从尾开始匹配, 最短删除
$(使变量%%匹配规则)	从尾开始匹配, 最长删除
'
# $变量(变量#匹配规则] 	从头开始匹配, 最短删除;
net="www.baidu.com"
echo ${net#} #只带这个# ，不带规则是默认显示变量的赋值内容！
echo ${net#*w} #从头开始删除 *代表了所有 删除到w 这个符号结束(依靠最短匹配原则）
echo ${net#*.}
echo ${net#*b}
echo ${net#*u}
echo "(3)------------------------------------------------------------"
# $(变量##匹配规则)  从头开始匹配，最长匹配（贪婪的方式）；
echo ${net##*.}
echo ${net##*w}
echo "(4)------------------------------------------------------------"
# ${变量%匹配规则}   从尾开始匹配，最短删除；
echo ${net%.*}
echo ${net%*.}
echo "(5)------------------------------------------------------------"
# ${变量%%匹配规则}   从尾开始匹配，最长删除（贪婪模式）；
echo ${net%%.*}
