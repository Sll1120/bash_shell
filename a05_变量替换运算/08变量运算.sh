#!/bin/bash
# **********************************************************
# * Author : liangliangSu
# * Email : sll917@hotmail.com
# * Create time : 2023-01-30 10:26
# * Filename : 07变量运算.sh
# **********************************************************
: '
为什么需要变量运算？
场景① 程序中出现计算的程序；
场景② 单位换算
场景③ ......
和其他编程语言类似，Shell也有很多算数运算符号，我在网上找到了一些常见的！

Shell中常见的运算命令
expr 可用于整数运算，有其他额外的功能；
$(( ))  效率高的整数运算常用运算符；
let 类似 (())
$[ ]  用于整数运算；
bc   linux下的一个计算器程序，用于小数运算
awk 小数或整数运算
daclare  定义变量值和属性 -i参数可以用以定义整形变量，做运算；
'
echo '(1)-----------------------完美分割线--------------------------------'
#演示：(())
#双小括号，进行数值运算与数值比较，效率高，用法灵活。
#但是双小括号对对于小数来说，只能四舍五入！
echo $((5+5))
echo $((5-7))
echo $((5*7))
echo $((10/2))
echo $((10/3))
echo '(2)-----------------------完美分割线--------------------------------'
#双小括号除了可以运算整数类型，还可以做判断！
#１表示真；
#０表示假；
echo $((10 < 14))
echo $((10 < 10))
echo $((10 = 10))
echo $((10 == 10))
echo '(3)-----------------------完美分割线--------------------------------'
#双小括号弊端就是不能对小数（浮点数）或字符串，那么来看看awk怎么取值小数，小数位竟然保留了5位；
awk 'BEGIN {print 10/3}'
#双小括号怎么取余数
echo $((20%3))
echo $((10%3))
#除了用双小括号来做计算功能，还可以用中括号，因人而异，初级阶段没有什么区别！
echo $[10+5]

#++ --特殊运算符配合双小括运算
#这里变量名fx=10，遇到了((++fx))
#变量名在++的后面，在输出整个表达式时，先进行自增/自减运算，因为发fx为10 且要自增1，所以输出为11；
fx=10
echo $((++fx))
echo ${fx}
echo $((--fx))
#这里变量名fx=11，遇到了((fx++))
#变量名在++的前面，在输出整个表达式时，会输出fx的值，fx=11，所以输出为11；--也是这样推理的！
fx=10
echo $((++fx))
echo ${fx}
echo $((fx++))

