#!/bin/bash
# **********************************************************
# * Author : liangliangSu
# * Email : sll917@hotmail.com
# * Create time : 2022-10-20 17:09
# * Filename : 02awk_printf.sh
# **********************************************************
echo '(1)-----------------------完美分割线--------------------------------'
#print & $0
#print 是awk打印指定内容的主要命令
#awk '{print}'  /etc/passwd   ==   awk '{print $0}'  /etc/passwd  

echo '(2)-----------------------完美分割线--------------------------------'
awk '{print " "}' /etc/passwd  #不输出passwd的内容，而是输出相同个数的空行，进一步解释了awk是一行一行处理文本

echo '(3)-----------------------完美分割线--------------------------------'
awk '{print "s"}'   /etc/passwd   #输出相同个数的a行，一行只有一个a字母

echo '(4)-----------------------完美分割线--------------------------------'
awk -F":" '{print $1}'  /etc/passwd 

echo '(5)-----------------------完美分割线--------------------------------'
awk -F: '{print$1;print$2}' /etc/passwd #将每一行的前二个字段，分行输出，进一步理解一行一行处理文本

echo '(6)-----------------------完美分割线--------------------------------'
awk  -F: '{print $1,$3,$6}' OFS="\t" /etc/passwd        #输出字段1,3,6，以制表符作为分隔符
#输出处理结果到文件
route -n|awk 'NR!=1{print >> "./test.txt"}'  #1,在命令代码块中直接输出    
route -n|awk 'NR!=1{print}'  >> ./test.txt   #2,使用重定向进行输出           

#格式化输出
echo '(7)-----------------------完美分割线--------------------------------'
sudo netstat -anp|awk 'NR<=22 {printf "%-8s %-8s %-10s\n",$1,$2,$3}'
echo '(7-1)-----------------------完美分割线--------------------------------'
awk '{printf "%-8s %-10s\n", $1,$4}' test.txt
#printf表示格式输出
#%格式化输出分隔符
#-8长度为8个字符
#s表示字符串类型
#打印每行前三个字段，指定第一个字段输出字符串类型(长度为8)，第二个字段输出字符串类型(长度为8),
#第三个字段输出字符串类型(长度为10)

echo '(8)-----------------------完美分割线--------------------------------'
sudo netstat -anp|awk '$6=="LISTEN" || NR==1 {printf "%-10s %-10s %-10s \n",$1,$2,$3}'

echo '(9)-----------------------完美分割线--------------------------------'
sudo netstat -anp|awk '$6=="LISTEN" || NR==1 {printf "%-3s %-10s %-10s %-10s \n",NR,$1,$2,$3}'
